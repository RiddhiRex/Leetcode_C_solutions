#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 100

// Global variables to represent the queue
int queue[MAX_SIZE];
int front = -1;
int rear = -1;

// Function to check if the queue is empty
int isEmpty() {
    return front == -1;
}

// Function to check if the queue is full
int isFull() {
    return (rear + 1) % MAX_SIZE == front;
}

// Function to add an element to the rear of the queue
void enqueue(int value) {
    if (isFull()) {
        printf("Queue overflow\n");
        return;
    }
    if (isEmpty()) {
        front = 0;
    }
    rear = (rear + 1) % MAX_SIZE;
    queue[rear] = value;
}

// Function to remove an element from the front of the queue
int dequeue() {
    int item;
    if (isEmpty()) {
        printf("Queue underflow\n");
        exit(1);
    }
    item = queue[front];
    if (front == rear) {
        front = -1;
        rear = -1;
    } else {
        front = (front + 1) % MAX_SIZE;
    }
    return item;
}

int main() {
    enqueue(10);
    enqueue(20);
    enqueue(30);

    printf("Dequeued element: %d\n", dequeue()); // Output: 10
    printf("Dequeued element: %d\n", dequeue()); // Output: 20

    enqueue(40);

    printf("Dequeued element: %d\n", dequeue()); // Output: 30

    return 0;
}
